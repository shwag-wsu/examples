name: Build and Upload Image

on: push

jobs:
  release:
    runs-on: ubuntu-latest
    name: Build, package and upload .jar artifact
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: 21
    - name: Build and package project
      run: mvn -f ./fleet/pom.xml package
    - name: Upload Maven build artifact
      uses: actions/upload-artifact@v4
      with:
        name: artifact
        path: ./fleet/target/fleet-fleet-demo.jar
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }} # e.g., us-east-1
    - name: Upload to S3
      run: aws s3 cp ./fleet/target/fleet-fleet-demo.jar ${{ secrets.S3_BUCKET }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      
    - name: Build and push the tagged docker image to Amazon ECR
      working-directory: ./fleet 
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
        IMAGE_TAG: latest
      run: |
        docker build -t examples/fleet:$IMAGE_TAG .
        docker tag examples/fleet:$IMAGE_TAG 095808645442.dkr.ecr.us-east-1.amazonaws.com/examples/fleet:$IMAGE_TAG
        docker push 095808645442.dkr.ecr.us-east-1.amazonaws.com/examples/fleet:$IMAGE_TAG
        

          #  --recursive: Uploads directories recursively
          #  --exclude "*" : Exclude all files by default
          #  --include "path/to/your/files/*": Include specific files/folders
          #  ${{ secrets.S3_BUCKET }}/ :  S3 bucket name 

