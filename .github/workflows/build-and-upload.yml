name: Build and Upload Image

on: push

jobs:

  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Build Backend
        run: mvn clean install --file fleet/pom.xml

      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-artifact
          path: ./fleet/target/fleet-fleet-demo.jar
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies and Build UI
        working-directory: ./fleet-ui 
        run: |
          npm install
          npm run build

      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-artifact
          path: ./fleet-ui/dist/
  
  deploy:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - name: Download Backend Artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-artifact
          path: ./backend-artifact

      - name: Download Frontend Artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-artifact
          path: ./frontend-artifact

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Upload Backend to S3
        run: aws s3 cp ./backend-artifact/fleet-fleet-demo.jar s3://${{ env.S3_BUCKET }}/backend/

      - name: Upload Frontend to S3
        run: aws s3 cp ./frontend-artifact s3://${{ env.S3_BUCKET }}/ui/ --recursive

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
         
        
      - name: Build and push the tagged docker image to Amazon ECR
        working-directory: ./fleet  
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }} #095808645442.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}} # examples/fleet
          IMAGE_TAG: ${{ github.sha }}
        run: |
           docker build -t examples/fleet:$IMAGE_TAG .
           docker tag examples/fleet:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        

          #  --recursive: Uploads directories recursively
          #  --exclude "*" : Exclude all files by default
          #  --include "path/to/your/files/*": Include specific files/folders
          #  ${{ secrets.S3_BUCKET }}/ :  S3 bucket name 

